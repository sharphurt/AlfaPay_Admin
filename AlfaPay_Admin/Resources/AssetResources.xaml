<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:AlfaPay_Admin.Converter">
    <BitmapImage x:Key="SendIcon" UriSource="send.png" />
    <BitmapImage x:Name="TickIcon" x:Key="TickIcon" UriSource="tick.png" />
    <BitmapImage x:Key="RejectIcon" UriSource="reject.png" />
    <BitmapImage x:Key="SearchIcon" UriSource="search.png" />
    <BitmapImage x:Key="LogOutIcon" UriSource="logout.png" />
    <BitmapImage x:Key="SpinIcon" UriSource="spin.png" />
    <BitmapImage x:Key="ErrorIcon" UriSource="error.png" />
    <BitmapImage x:Key="SpinSmallIcon" UriSource="spin_small.png" />
    <BitmapImage x:Key="SpinSmallWhiteIcon" UriSource="spin_small_white.png" />
    <BitmapImage x:Key="DeadImage" UriSource="dead.png" />
    <BitmapImage x:Key="ApplyWindowPlate" UriSource="apply_window_plate.png" />
    <ImageBrush x:Key="ApplyWindowPlateImageBrush" ImageSource="apply_window_plate.png" />
    <BitmapImage x:Key="SuccessfulTick" UriSource="successfull_tick.png" />
    <BitmapImage x:Key="AlfaPattern" UriSource="alfa_pattern_white_rgb.png" />
    <BitmapImage x:Key="Background" UriSource="background.png" />
    <BitmapImage x:Key="CloseIcon" UriSource="close.png" />

    <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converter:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
    <converter:ObjectToBoolConverter x:Key="ObjectToBoolConverter" />
    <converter:InvertedObjectToVisibilityConverter x:Key="InvertedObjectToVisibilityConverter" />
    <converter:DateTimeConverter x:Key="DateTimeConverter" />
    <converter:ErrorToErrorMessageConverter x:Key="ErrorMessageConverter" />
    <converter:BoolToIconConverter x:Key="BoolToIconConverter" />
    <converter:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
    <converter:InvertedBoolConverter x:Key="InvertedBoolConverter" />
    <converter:InvertedObjectToBoolConverter x:Key="InvertedObjectToBoolConverter" />
    <converter:ObjectToStringConverter x:Key="ObjectToStringConverter" />
    <converter:RequestStatusInProgressToVisibility x:Key="RequestStatusInProgressToVisibility" />
    <converter:InvertedRequestStatusInProgressToVisibility x:Key="InvertedRequestStatusInProgressToVisibility" />
    <converter:RequestStatusIsSuccessfulToVisibility x:Key="RequestStatusIsSuccessfulToVisibility" />
    <converter:RequestStatusIsErrorToVisibility x:Key="RequestStatusIsErrorToVisibility" />
    <converter:RequestStatusNotStartedToVisibility x:Key="RequestStatusNotStartedToVisibility" />
    <converter:InvertedRequestStatusInProgressToBool x:Key="InvertedRequestStatusInProgressToBool" />
    <converter:DoubleSubtractConverter x:Key="DoubleSubtractConverter" />
    <converter:CompareConverter x:Key="CompareConverter" />
    <converter:MultiBoolConverter x:Key="MultiBoolConverter" />

    <Style x:Key="ListBoxElement" TargetType="Grid">
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#f3f4f5"
                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                            Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Transparent"
                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                            Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Storyboard x:Key="ApplyWindowOpenAnimation">
        <DoubleAnimation Duration="0:0:0.4"
                         Storyboard.TargetName="ApplyWindow"
                         Storyboard.TargetProperty="Opacity" From="0" To="1" />
        <ThicknessAnimation Duration="0:0:0.4"
                            Storyboard.TargetName="ApplyWindowContentBox"
                            Storyboard.TargetProperty="Margin"
                            From="0,-200,0,0" To="0"
                            DecelerationRatio="0.9" />
    </Storyboard>


    <Style x:Key="CloseButton" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Opacity">
                            <DoubleAnimation To="0.8" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Opacity">
                            <DoubleAnimation To="0.15" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ErrorPlateStyle" TargetType="Decorator">
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="1" Duration="0:0:5" />
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:5" From="1" To="0"
                                             Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupStyle" TargetType="Popup">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=AddressTextBox, Path=IsFocused}"
                         Value="True">
                <Setter Property="IsOpen" Value="True" />
                <Setter Property="StaysOpen" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding ElementName=AddressTextBox, Path=IsFocused}"
                         Value="False">
                <Setter Property="StaysOpen" Value="False" />
                <Setter Property="IsOpen" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="TabItemTemplate" TargetType="TabItem">
        <Border Margin="2" Name="TabBorder" BorderBrush="Transparent" Background="Transparent"
                BorderThickness="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid>
                <StackPanel Name="Panel" Margin="5">
                    <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header" Margin="5" />
                    <Rectangle x:Name="Line" Fill="Red" Height="2" Margin="5,0,5,0" />
                </StackPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Line" Property="Visibility" Value="Visible" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter TargetName="Line" Property="Visibility" Value="Collapsed" />
                <Setter Property="FontWeight" Value="Normal" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="TabBorder">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="TabBorder"
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            To="#f3f4f5" Duration="0:0:0.2" />
                            <ThicknessAnimation Storyboard.TargetName="Line" Storyboard.TargetProperty="Margin"
                                                To="0,0,0,0" Duration="0:0:0.2" DecelerationRatio="0.7" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="TabBorder"
                                            Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            From="#f3f4f5" Duration="0:0:0.2" />
                            <ThicknessAnimation Storyboard.TargetName="Line" Storyboard.TargetProperty="Margin"
                                                From="0,0,0,0" Duration="0:0:0.2" DecelerationRatio="0.7" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Style.Resources>
            <Color x:Key="PrimaryColor" B="0" G="0" R="0" A="0" />
            <Color x:Key="MouseOverColor" B="0" G="255" R="0" A="255" />
            <Color x:Key="MousePressedColor" B="11" G="31" R="53" A="76" />
            <Color x:Key="DisabledColor" R="236" G="237" B="239" A="255" />

            <SolidColorBrush x:Key="PrimaryColorBrush" Color="{StaticResource PrimaryColor}" />
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Template" Value="{StaticResource TabItemTemplate}" />
    </Style>

    <Style x:Key="ItemContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Line x:Name="SelectionLine"
                              X1="0"
                              X2="0"
                              Y1="0" Y2="60" Stroke="#F15045" StrokeThickness="5" Opacity="0" />
                        <ContentPresenter Margin="5,0,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="SelectionLine" TargetProperty="Opacity">
                                        <DoubleAnimation To="1.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="SelectionLine" TargetProperty="Opacity">
                                        <DoubleAnimation To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ApplicationItem">
        <Grid Height="60 px" Style="{StaticResource ListBoxElement}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5 px" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Label Grid.Column="1" Grid.Row="0"
                   Style="{StaticResource SecondaryHeader}"
                   Content="{Binding Path=Name}" Height="30" />
            <Label Grid.Column="1" Grid.Row="1"
                   Style="{StaticResource SecondaryText}"
                   Content="{Binding Path=Phone}" />
            <Label Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"
                   Style="{StaticResource TertiaryText}"
                   Content="{Binding Path=CreatedAt}" HorizontalAlignment="Right"
                   VerticalAlignment="Bottom" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>